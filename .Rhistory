# notes = c("Data weighted by turnout."),
# title = "Turnout and satisfaction with democracy, 2023 Czech presidential election",
gof_map = "nobs")
ce2_round1_ame <- glm(voted_1r ~ SWD_w1 + female + age +
postsecondary_edu + duty_to_vote +
pol_interest_num + pol_knowledge + party_close,
data = cz_2023_all_waves_resp,
family = binomial(link = "logit"),
weights = weight_turnout)
avg_slopes(ce2_round1_ame,
variables = "SWD_w1",
vcov = "HC1",
wts = "weight_turnout")
ce2_round1_ame <- glm(voted_1r ~ SWD_w1 + female + age +
postsecondary_edu + duty_to_vote +
pol_interest_num + pol_knowledge + party_close,
data = cz_2023_all_waves_resp,
family = binomial(link = "logit"),
weights = weight_results)
avg_slopes(ce2_round1_ame,
variables = "SWD_w1",
vcov = "HC1",
wts = "weight_turnout")
ce2_round2_ame <- glm(voted_2r ~ SWD_w1 + female +
age + postsecondary_edu + duty_to_vote +
pol_interest_num + pol_knowledge + party_close,
data = cz_2023_all_waves_resp,
family = binomial(link = "logit"),
weights = weight_turnout)
avg_slopes(ce2_round2_ame,
variables = "SWD_w1",
vcov = "HC1",
wts = "weight_turnout")
ce2_round2_ame <- glm(voted_2r ~ SWD_w1 + female +
age + postsecondary_edu + duty_to_vote +
pol_interest_num + pol_knowledge + party_close,
data = cz_2023_all_waves_resp,
family = binomial(link = "logit"),
weights = weight_results)
avg_slopes(ce2_round2_ame,
variables = "SWD_w1",
vcov = "HC1",
wts = "weight_turnout")
pavel_voters <- cz_2023_all_waves_resp %>%
filter(PRES2023CAND2r_w4 == "Petr Pavel")
swd1_round1 <- lm_robust(swd_diff ~ voted_1r + voted_2r +
swd_pre + female +
age +
postsecondary_edu + pol_interest_num +
pol_knowledge + party_close + duty_to_vote,
data = cz_2023_all_waves_resp,
weights = weight_turnout,
se_type = "stata")
swd1_round1b <- lm_robust(swd_diff ~ voted_1r + voted_2r +
swd_pre + female +
age +
postsecondary_edu + pol_interest_num +
pol_knowledge + party_close + duty_to_vote,
data = cz_2023_all_waves_resp,
weights = weight_turnout,
se_type = "stata")
swd3_round1 <- lm_robust(swd_diff ~ voter_type + swd_pre +
female + age +
postsecondary_edu + pol_interest_num +
pol_knowledge + party_close + duty_to_vote,
data = cz_2023_all_waves_resp,
weights = weight_turnout,
se_type = "stata")
swd4_round1 <- lm_robust(swd_diff ~ prez_vote_type + swd_pre +
female + age +
postsecondary_edu + pol_interest_num +
pol_knowledge + party_close + duty_to_vote,
data = cz_2023_all_waves_resp,
weights = weight_turnout,
se_type = "stata")
swd5_round1 <- lm_robust(swd_diff ~ stable_voter + swd_pre +
female + age +
postsecondary_edu + pol_interest_num +
pol_knowledge + party_close + duty_to_vote,
data = pavel_voters,
weights = weight_turnout,
se_type = "stata")
swd5_round1_ord <- lm_robust(swd_diff ~ pavel_decision + swd_pre +
female + age +
postsecondary_edu + pol_interest_num +
pol_knowledge + party_close + duty_to_vote,
data = pavel_voters,
weights = weight_turnout,
se_type = "stata")
modelsummary(list(swd1_round1, swd3_round1,
swd4_round1
),
stars = c("*"=.05, "**"=.01, "***"=0.001),
coef_map = c(
"voted_1r" = "Voted (R1)",
"voted_2r" = "Voted (R2)",
"voter_typeVoted for winner" = "Winner",
"voter_typeVoted for loser" = "Loser",
"prez_vote_typefull winner" = "Full winner (A)",
"prez_vote_typesub-optimal winner" = "Sub-optimal winner (B)",
"prez_vote_typepartial loser" = "Partial loser (C)",
"prez_vote_typefull loser" = "Full loser (D)",
"stable_voter" = "Stable winner",
"swd_pre" = "Pre-election SWD",
"female" = "Female",
"age" = "Age",
"postsecondary_edu" = "Post-secondary education",
"pol_interest_num" = "Pol. interest",
"pol_knowledge" = "Pol. knowledge",
"party_close" = "Feels close to a party",
"duty_to_vote" = "Duty to vote",
"(Intercept)"="Intercept"
),
fmt = 2,
gof_map = c("nobs", "r.squared", "adj.r.squared"),
# notes = c("Data weighted by turnout."),
output = "output/tab4_models.tex")
modelsummary(list(swd1_round1, swd3_round1,
swd4_round1
),
stars = c("*"=.05, "**"=.01, "***"=0.001),
coef_rename = c(
"voted_1r" = "Voted (R1)",
"voted_2r" = "Voted (R2)",
"voter_typeVoted for winner" = "Winner",
"voter_typeVoted for loser" = "Loser",
"prez_vote_typefull winner" = "Full winner (A)",
"prez_vote_typesub-optimal winner" = "Sub-optimal winner (B)",
"prez_vote_typepartial loser" = "Partial loser (C)",
"prez_vote_typefull loser" = "Full loser (D)",
"stable_voter" = "Stable winner",
"swd_pre" = "Pre-election SWD",
"female" = "Female",
"age" = "Age",
"postsecondary_edu" = "Post-secondary education",
"pol_interest_num" = "Pol. interest",
"pol_knowledge" = "Pol. knowledge",
"party_close" = "Feels close to a party",
"duty_to_vote" = "Duty to vote",
"(Intercept)"="Intercept"
),
fmt = 2,
gof_map = c("nobs", "r.squared", "adj.r.squared"),
notes = c("Data weighted by turnout.")
)
swd5_round1 <- lm_robust(swd_diff ~ stable_voter + swd_pre +
female + age +
postsecondary_edu + pol_interest_num +
pol_knowledge + party_close + duty_to_vote,
data = pavel_voters,
weights = weight_turnout,
se_type = "stata")
modelsummary(list(swd5_round1
),
stars = c("*"=.05, "**"=.01, "***"=0.001),
coef_rename = c(
"voted_1r" = "Voted (R1)",
"voted_2r" = "Voted (R2)",
"voter_typeVoted for winner" = "Winner",
"voter_typeVoted for loser" = "Loser",
"prez_vote_typefull winner" = "Full winner (A)",
"prez_vote_typesub-optimal winner" = "Sub-optimal winner (B)",
"prez_vote_typepartial loser" = "Partial loser (C)",
"prez_vote_typefull loser" = "Full loser (D)",
"stable_voter" = "Stable winner",
"swd_pre" = "Pre-election SWD",
"female" = "Female",
"age" = "Age",
"postsecondary_edu" = "Post-secondary education",
"pol_interest_num" = "Pol. interest",
"pol_knowledge" = "Pol. knowledge",
"party_close" = "Feels close to a party",
"duty_to_vote" = "Duty to vote",
"(Intercept)"="Intercept"
),
fmt = 2,
gof_map = c("nobs", "r.squared", "adj.r.squared"),
notes = c("Data weighted by turnout.")
)
modelsummary(list(swd5_round1),
stars = c("*"=.05, "**"=.01, "***"=0.001),
coef_map = c(
"voted_1r" = "Voted (R1)",
"voted_2r" = "Voted (R2)",
"voter_typeVoted for winner" = "Winner",
"voter_typeVoted for loser" = "Loser",
"prez_vote_typefull winner" = "Full winner (A)",
"prez_vote_typesub-optimal winner" = "Sub-optimal winner (B)",
"prez_vote_typepartial loser" = "Partial loser (C)",
"prez_vote_typefull loser" = "Full loser (D)",
"stable_voter" = "Stable winner",
"swd_pre" = "Pre-election SWD",
"female" = "Female",
"age" = "Age",
"postsecondary_edu" = "Post-secondary education",
"pol_interest_num" = "Pol. interest",
"pol_knowledge" = "Pol. knowledge",
"party_close" = "Feels close to a party",
"duty_to_vote" = "Duty to vote",
"(Intercept)"="Intercept"
),
fmt = 2,
gof_map = c("nobs", "r.squared", "adj.r.squared"),
# notes = c("Data weighted by turnout."),
output = "output/app_tab31_hypothesis5.tex")
pavel_voters <- cz_2023_all_waves_resp %>%
filter(PRES2023CAND2r_w4 == "Petr Pavel")
swd1_round1 <- lm_robust(swd_diff ~ voted_1r + voted_2r +
swd_pre + female +
age +
postsecondary_edu + pol_interest_num +
pol_knowledge + party_close + duty_to_vote,
data = cz_2023_all_waves_resp,
weights = weight_results,
se_type = "stata")
swd1_round1b <- lm_robust(swd_diff ~ voted_1r + voted_2r +
swd_pre + female +
age +
postsecondary_edu + pol_interest_num +
pol_knowledge + party_close + duty_to_vote,
data = cz_2023_all_waves_resp,
weights = weight_results,
se_type = "stata")
swd3_round1 <- lm_robust(swd_diff ~ voter_type + swd_pre +
female + age +
postsecondary_edu + pol_interest_num +
pol_knowledge + party_close + duty_to_vote,
data = cz_2023_all_waves_resp,
weights = weight_results,
se_type = "stata")
swd4_round1 <- lm_robust(swd_diff ~ prez_vote_type + swd_pre +
female + age +
postsecondary_edu + pol_interest_num +
pol_knowledge + party_close + duty_to_vote,
data = cz_2023_all_waves_resp,
weights = weight_results,
se_type = "stata")
swd5_round1 <- lm_robust(swd_diff ~ stable_voter + swd_pre +
female + age +
postsecondary_edu + pol_interest_num +
pol_knowledge + party_close + duty_to_vote,
data = pavel_voters,
weights = weight_results,
se_type = "stata")
swd5_round1_ord <- lm_robust(swd_diff ~ pavel_decision + swd_pre +
female + age +
postsecondary_edu + pol_interest_num +
pol_knowledge + party_close + duty_to_vote,
data = pavel_voters,
weights = weight_results,
se_type = "stata")
modelsummary(list(swd1_round1, swd3_round1,
swd4_round1
),
stars = c("*"=.05, "**"=.01, "***"=0.001),
coef_map = c(
"voted_1r" = "Voted (R1)",
"voted_2r" = "Voted (R2)",
"voter_typeVoted for winner" = "Winner",
"voter_typeVoted for loser" = "Loser",
"prez_vote_typefull winner" = "Full winner (A)",
"prez_vote_typesub-optimal winner" = "Sub-optimal winner (B)",
"prez_vote_typepartial loser" = "Partial loser (C)",
"prez_vote_typefull loser" = "Full loser (D)",
"stable_voter" = "Stable winner",
"swd_pre" = "Pre-election SWD",
"female" = "Female",
"age" = "Age",
"postsecondary_edu" = "Post-secondary education",
"pol_interest_num" = "Pol. interest",
"pol_knowledge" = "Pol. knowledge",
"party_close" = "Feels close to a party",
"duty_to_vote" = "Duty to vote",
"(Intercept)"="Intercept"
),
fmt = 2,
gof_map = c("nobs", "r.squared", "adj.r.squared"),
# notes = c("Data weighted by turnout."),
output = "output/tab4b_models.tex")
modelsummary(list(swd1_round1, swd3_round1,
swd4_round1
),
stars = c("*"=.05, "**"=.01, "***"=0.001),
coef_rename = c(
"voted_1r" = "Voted (R1)",
"voted_2r" = "Voted (R2)",
"voter_typeVoted for winner" = "Winner",
"voter_typeVoted for loser" = "Loser",
"prez_vote_typefull winner" = "Full winner (A)",
"prez_vote_typesub-optimal winner" = "Sub-optimal winner (B)",
"prez_vote_typepartial loser" = "Partial loser (C)",
"prez_vote_typefull loser" = "Full loser (D)",
"stable_voter" = "Stable winner",
"swd_pre" = "Pre-election SWD",
"female" = "Female",
"age" = "Age",
"postsecondary_edu" = "Post-secondary education",
"pol_interest_num" = "Pol. interest",
"pol_knowledge" = "Pol. knowledge",
"party_close" = "Feels close to a party",
"duty_to_vote" = "Duty to vote",
"(Intercept)"="Intercept"
),
fmt = 2,
gof_map = c("nobs", "r.squared", "adj.r.squared"),
notes = c("Data weighted by election results.")
)
swd5_round1 <- lm_robust(swd_diff ~ stable_voter + swd_pre +
female + age +
postsecondary_edu + pol_interest_num +
pol_knowledge + party_close + duty_to_vote,
data = pavel_voters,
weights = weight_results,
se_type = "stata")
modelsummary(list(swd5_round1
),
stars = c("*"=.05, "**"=.01, "***"=0.001),
coef_rename = c(
"voted_1r" = "Voted (R1)",
"voted_2r" = "Voted (R2)",
"voter_typeVoted for winner" = "Winner",
"voter_typeVoted for loser" = "Loser",
"prez_vote_typefull winner" = "Full winner (A)",
"prez_vote_typesub-optimal winner" = "Sub-optimal winner (B)",
"prez_vote_typepartial loser" = "Partial loser (C)",
"prez_vote_typefull loser" = "Full loser (D)",
"stable_voter" = "Stable winner",
"swd_pre" = "Pre-election SWD",
"female" = "Female",
"age" = "Age",
"postsecondary_edu" = "Post-secondary education",
"pol_interest_num" = "Pol. interest",
"pol_knowledge" = "Pol. knowledge",
"party_close" = "Feels close to a party",
"duty_to_vote" = "Duty to vote",
"(Intercept)"="Intercept"
),
fmt = 2,
gof_map = c("nobs", "r.squared", "adj.r.squared"),
notes = c("Data weighted by election results.")
)
modelsummary(list(swd5_round1),
stars = c("*"=.05, "**"=.01, "***"=0.001),
coef_map = c(
"voted_1r" = "Voted (R1)",
"voted_2r" = "Voted (R2)",
"voter_typeVoted for winner" = "Winner",
"voter_typeVoted for loser" = "Loser",
"prez_vote_typefull winner" = "Full winner (A)",
"prez_vote_typesub-optimal winner" = "Sub-optimal winner (B)",
"prez_vote_typepartial loser" = "Partial loser (C)",
"prez_vote_typefull loser" = "Full loser (D)",
"stable_voter" = "Stable winner",
"swd_pre" = "Pre-election SWD",
"female" = "Female",
"age" = "Age",
"postsecondary_edu" = "Post-secondary education",
"pol_interest_num" = "Pol. interest",
"pol_knowledge" = "Pol. knowledge",
"party_close" = "Feels close to a party",
"duty_to_vote" = "Duty to vote",
"(Intercept)"="Intercept"
),
fmt = 2,
gof_map = c("nobs", "r.squared", "adj.r.squared"),
# notes = c("Data weighted by turnout."),
output = "output/app_tab31_hypothesis5b.tex")
mar_df <- margins(swd4_round1, variables = "prez_vote_type") %>%
summary() %>%
as.data.frame() %>%
mutate(
factor = factor(factor, levels = c(
"prez_vote_typefull winner",
"prez_vote_typesub-optimal winner",
"prez_vote_typepartial loser",
"prez_vote_typefull loser"
), labels = c("Full winner (A)", "Sub-optimal winner (B)",
"Partial loser (C)", "Full loser (D)"))
)
ggplot(mar_df, aes(x = factor, y = AME)) +
geom_hline(yintercept = 0) +
geom_pointrange(aes(ymin = lower, ymax = upper)) +
theme_minimal() +
scale_y_continuous(limits = c(-0.1, 0.2)) +
labs(x = "", y = "Average Marginal Effect")
ggsave("output/swd_change_ame_b.pdf",
width = 7, height = 5)
rename_map <- c(
"winnerwinner" = "Winner",
"winnerloser" = "Loser",
"winner_stable2full winner" = "Full winner (A)",
"winner_stable2sub-optimal winner" = "Sub-optimal winner (B)",
"winner_stable2partial loser" = "Partial loser (C)",
"winner_stable2full loser" = "Full loser (D)",
"vote_gov" = "government voter (PS 2021)"
)
m1_w5 <- lmer(SWD_num ~ winner * wave + (1 | RADIOMETER_ID2),
data = long_w1_w5, weights = weight_results)
tar_load(cz_2023_long)
tar_load(cz_2023_weight_results)
tar_make()
tar_load(cz_2023_long)
long_w1_w5 <- cz_2023_long
rename_map <- c(
"winnerwinner" = "Winner",
"winnerloser" = "Loser",
"winner_stable2full winner" = "Full winner (A)",
"winner_stable2sub-optimal winner" = "Sub-optimal winner (B)",
"winner_stable2partial loser" = "Partial loser (C)",
"winner_stable2full loser" = "Full loser (D)",
"vote_gov" = "government voter (PS 2021)"
)
m1_w5 <- lmer(SWD_num ~ winner * wave + (1 | RADIOMETER_ID2),
data = long_w1_w5, weights = weight_results)
m2_w5 <- lmer(SWD_num ~ winner_stable2 * wave + (1 | RADIOMETER_ID2),
data = long_w1_w5, weights = weight_results)
m3_w5 <- lmer(SWD_num ~ vote_gov * wave + (1 | RADIOMETER_ID2),
data = long_w1_w5, weights = weight_results)
modelsummary::modelsummary(
list(m1_w5, m2_w5, m3_w5),
stars = c("*"=.05, "**"=.01,  "***"=0.001),
# coef_rename = rename_map
coef_map = c(
"winnerwinner" = "Winner",
"winnerloser" = "Loser",
"winner_stable2full winner" = "Full winner (A)",
"winner_stable2sub-optimal winner" = "Sub-optimal winner (B)",
"winner_stable2partial loser" = "Partial loser (C)",
"winner_stable2full loser" = "Full loser (D)",
"vote_gov" = "government voter (PS 2021)",
"wave2" = "Wave 2",
"wave3" = "Wave 3",
"wave4" = "Wave 4",
"wave5" = "Wave 5",
"winnerwinner:wave2" = "Winner × Wave 2",
"winnerwinner:wave3" = "Winner × Wave 3",
"winnerwinner:wave4" = "Winner × Wave 4",
"winnerwinner:wave5" = "Winner × Wave 5",
"winnerloser:wave2" = "Loser × Wave 2",
"winnerloser:wave3" = "Loser × Wave 3",
"winnerloser:wave4" = "Loser × Wave 4",
"winnerloser:wave5" = "Loser × Wave 5",
"winner_stable2full winner:wave2" = "Full winner (A) × Wave 2",
"winner_stable2full winner:wave3" = "Full winner (A) × Wave 3",
"winner_stable2full winner:wave4" = "Full winner (A) × Wave 4",
"winner_stable2full winner:wave5" = "Full winner (A) × Wave 5",
"winner_stable2sub-optimal winner:wave2" = "Sub-optimal winner (B) × Wave 2",
"winner_stable2sub-optimal winner:wave3" = "Sub-optimal winner (B) × Wave 3",
"winner_stable2sub-optimal winner:wave4" = "Sub-optimal winner (B) × Wave 4",
"winner_stable2sub-optimal winner:wave5" = "Sub-optimal winner (B) × Wave 5",
"winner_stable2partial loser:wave2" = "Partial loser (C) × Wave 2",
"winner_stable2partial loser:wave3" = "Partial loser (C) × Wave 3",
"winner_stable2partial loser:wave4" = "Partial loser (C) × Wave 4",
"winner_stable2partial loser:wave5" = "Partial loser (C) × Wave 5",
"winner_stable2full loser:wave2" = "Full loser (D) × Wave 2",
"winner_stable2full loser:wave3" = "Full loser (D) × Wave 3",
"winner_stable2full loser:wave4" = "Full loser (D) × Wave 4",
"winner_stable2full loser:wave5" = "Full loser (D) × Wave 5",
"vote_gov:wave2" = "government voter (PS 2021) × Wave 2",
"vote_gov:wave3" = "government voter (PS 2021) × Wave 3",
"vote_gov:wave4" = "government voter (PS 2021) × Wave 4",
"vote_gov:wave5" = "government voter (PS 2021) × Wave 5"
)
)
modelsummary::modelsummary(
list(m1_w5, m2_w5, m3_w5),
stars = c("*"=.05, "**"=.01,  "***"=0.001),
# coef_rename = rename_map
coef_map = c(
"winnerwinner" = "Winner",
"winnerloser" = "Loser",
"winner_stable2full winner" = "Full winner (A)",
"winner_stable2sub-optimal winner" = "Sub-optimal winner (B)",
"winner_stable2partial loser" = "Partial loser (C)",
"winner_stable2full loser" = "Full loser (D)",
"vote_gov" = "government voter (PS 2021)",
"wave2" = "Wave 2",
"wave3" = "Wave 3",
"wave4" = "Wave 4",
"wave5" = "Wave 5",
"winnerwinner:wave2" = "Winner × Wave 2",
"winnerwinner:wave3" = "Winner × Wave 3",
"winnerwinner:wave4" = "Winner × Wave 4",
"winnerwinner:wave5" = "Winner × Wave 5",
"winnerloser:wave2" = "Loser × Wave 2",
"winnerloser:wave3" = "Loser × Wave 3",
"winnerloser:wave4" = "Loser × Wave 4",
"winnerloser:wave5" = "Loser × Wave 5",
"winner_stable2full winner:wave2" = "Full winner (A) × Wave 2",
"winner_stable2full winner:wave3" = "Full winner (A) × Wave 3",
"winner_stable2full winner:wave4" = "Full winner (A) × Wave 4",
"winner_stable2full winner:wave5" = "Full winner (A) × Wave 5",
"winner_stable2sub-optimal winner:wave2" = "Sub-optimal winner (B) × Wave 2",
"winner_stable2sub-optimal winner:wave3" = "Sub-optimal winner (B) × Wave 3",
"winner_stable2sub-optimal winner:wave4" = "Sub-optimal winner (B) × Wave 4",
"winner_stable2sub-optimal winner:wave5" = "Sub-optimal winner (B) × Wave 5",
"winner_stable2partial loser:wave2" = "Partial loser (C) × Wave 2",
"winner_stable2partial loser:wave3" = "Partial loser (C) × Wave 3",
"winner_stable2partial loser:wave4" = "Partial loser (C) × Wave 4",
"winner_stable2partial loser:wave5" = "Partial loser (C) × Wave 5",
"winner_stable2full loser:wave2" = "Full loser (D) × Wave 2",
"winner_stable2full loser:wave3" = "Full loser (D) × Wave 3",
"winner_stable2full loser:wave4" = "Full loser (D) × Wave 4",
"winner_stable2full loser:wave5" = "Full loser (D) × Wave 5",
"vote_gov:wave2" = "government voter (PS 2021) × Wave 2",
"vote_gov:wave3" = "government voter (PS 2021) × Wave 3",
"vote_gov:wave4" = "government voter (PS 2021) × Wave 4",
"vote_gov:wave5" = "government voter (PS 2021) × Wave 5"
),
fmt = 2,
output = "output/tab7b_models.tex"
)
