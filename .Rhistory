filter(election == "DE (Ost) 2017") %>%
summarise_data(COMMON_VARS) %>%
mutate(variable = factor(variable,
levels = c("voted", "swd_diff",
"swd_pre", "swd_post", "female",
"age", "postsecondary_edu",
"pol_interest_num", "party_close",
"voter_type",
"Voted for winner",
"Voted for loser",
"Abstainer"),
labels = c("Voted",
"SWD difference",
"Pre-election SWD",
"Post-election SWD",
"Female",
"Age",
"Post-secondary education",
"Political interest",
"Close to a party",
"Voter type",
"Winner",
"Loser",
"Abstainer")))
knitr::kable(de_17, digits = 2,
col.names = c("Variable", "mean",
"SD", "min", "Q1", "median", "Q3",
"max", "N"),
format = "latex") %>%
writeLines(., "output/app_tab4_descriptives_de2017.tex")
knitr::kable(de_17, digits = 2,
col.names = c("Variable", "mean",
"SD", "min", "Q1", "median", "Q3",
"max", "N"),
label = "DE 2017")
hu_19 <- all_panels_both_waves %>%
filter(election == "HU 2019") %>%
summarise_data(COMMON_VARS) %>%
mutate(variable = factor(variable,
levels = c("voted", "swd_diff",
"swd_pre", "swd_post", "female",
"age", "postsecondary_edu",
"pol_interest_num", "party_close",
"voter_type",
"Voted for winner",
"Voted for loser",
"Abstainer"),
labels = c("Voted",
"SWD difference",
"Pre-election SWD",
"Post-election SWD",
"Female",
"Age",
"Post-secondary education",
"Political interest",
"Close to a party",
"Voter type",
"Winner",
"Loser",
"Abstainer")))
knitr::kable(hu_19, digits = 2,
col.names = c("Variable", "mean",
"SD", "min", "Q1", "median", "Q3",
"max", "N"),
format = "latex") %>%
writeLines(., "output/app_tab5_descriptives_hu2019.tex")
knitr::kable(hu_19, digits = 2,
col.names = c("Variable", "mean",
"SD", "min", "Q1", "median", "Q3",
"max", "N"),
label = "HU 2019")
pl_19 <- all_panels_both_waves %>%
filter(election == "PL 2019") %>%
summarise_data(COMMON_VARS) %>%
mutate(variable = factor(variable,
levels = c("voted", "swd_diff",
"swd_pre", "swd_post", "female",
"age", "postsecondary_edu",
"pol_interest_num", "party_close",
"voter_type",
"Voted for winner",
"Voted for loser",
"Abstainer"),
labels = c("Voted",
"SWD difference",
"Pre-election SWD",
"Post-election SWD",
"Female",
"Age",
"Post-secondary education",
"Political interest",
"Close to a party",
"Voter type",
"Winner",
"Loser",
"Abstainer")))
knitr::kable(pl_19, digits = 2,
col.names = c("Variable", "mean",
"SD", "min", "Q1", "median", "Q3",
"max", "N"),
format = "latex") %>%
writeLines(., "output/app_tab6_descriptives_pl2019.tex")
knitr::kable(pl_19, digits = 2,
col.names = c("Variable", "mean",
"SD", "min", "Q1", "median", "Q3",
"max", "N"),
label = "PL 2019")
ro_09 <- all_panels_both_waves %>%
filter(election == "RO 2009") %>%
summarise_data(COMMON_VARS) %>%
mutate(variable = factor(variable,
levels = c("voted", "swd_diff",
"swd_pre", "swd_post", "female",
"age", "postsecondary_edu",
"pol_interest_num", "party_close",
"voter_type",
"Voted for winner",
"Voted for loser",
"Abstainer"),
labels = c("Voted",
"SWD difference",
"Pre-election SWD",
"Post-election SWD",
"Female",
"Age",
"Post-secondary education",
"Political interest",
"Close to a party",
"Voter type",
"Winner",
"Loser",
"Abstainer")))
knitr::kable(ro_09, digits = 2,
col.names = c("Variable", "mean",
"SD", "min", "Q1", "median", "Q3",
"max", "N"),
format = "latex") %>%
writeLines(., "output/app_tab7_descriptives_ro2009.tex")
knitr::kable(ro_09, digits = 2,
col.names = c("Variable", "mean",
"SD", "min", "Q1", "median", "Q3",
"max", "N"),
label = "RO 2009")
ro_12 <- all_panels_both_waves %>%
filter(election == "RO 2012") %>%
summarise_data(COMMON_VARS) %>%
mutate(variable = factor(variable,
levels = c("voted", "swd_diff",
"swd_pre", "swd_post", "female",
"age", "postsecondary_edu",
"pol_interest_num", "party_close",
"voter_type",
"Voted for winner",
"Voted for loser",
"Abstainer"),
labels = c("Voted",
"SWD difference",
"Pre-election SWD",
"Post-election SWD",
"Female",
"Age",
"Post-secondary education",
"Political interest",
"Close to a party",
"Voter type",
"Winner",
"Loser",
"Abstainer")))
knitr::kable(ro_12, digits = 2,
col.names = c("Variable", "mean",
"SD", "min", "Q1", "median", "Q3",
"max", "N"),
format = "latex") %>%
writeLines(., "output/app_tab8_descriptives_ro2012.tex")
knitr::kable(ro_12, digits = 2,
col.names = c("Variable", "mean",
"SD", "min", "Q1", "median", "Q3",
"max", "N"),
label = "RO 2012")
ce0_round1_e <- glm(voted_1r ~ 1,
data = cz_2023_all_waves_resp %>% filter(!is.na(soc_class_r)),
family = binomial(link = "logit"),
weights = weight_turnout) %>%
coeftest(., vcov = vcovHC(., type="HC1"))
ce1_round1_e <- glm(voted_1r ~ SWD_w1 + SWD_w4,
data = cz_2023_all_waves_resp %>%
filter(!is.na(soc_class_r)),
family = binomial(link = "logit"),
weights = weight_turnout) %>%
coeftest(., vcov = vcovHC(., type="HC1"))
ce2_round1_e <- glm(voted_1r ~ SWD_w1 + female + age +
postsecondary_edu + duty_to_vote +
pol_interest_num + pol_knowledge + party_close +
econ_precariousness2 + soc_class_r,
data = cz_2023_all_waves_resp %>%
filter(!is.na(soc_class_r)),
family = binomial(link = "logit"),
weights = weight_turnout) %>%
coeftest(., vcov = vcovHC(., type="HC1"))
ce3_round1_e <- glm(voted_1r ~ SWD_w4 + female + age +
postsecondary_edu + duty_to_vote +
pol_interest_num + pol_knowledge + party_close +
econ_precariousness2 + soc_class_r,
data = cz_2023_all_waves_resp %>%
filter(!is.na(soc_class_r)),
family = binomial(link = "logit"),
weights = weight_turnout) %>%
coeftest(., vcov = vcovHC(., type="HC1"))
ce4_round1_e <- glm(voted_1r ~ SWD_w1 + SWD_w4 +
female + age + postsecondary_edu + duty_to_vote +
pol_interest_num + pol_knowledge +
party_close +
econ_precariousness2 + soc_class_r,
data = cz_2023_all_waves_resp %>%
filter(!is.na(soc_class_r)),
family = binomial(link = "logit"),
weights = weight_turnout) %>%
coeftest(., vcov = vcovHC(., type="HC1"))
ce0_round2_e <- glm(voted_2r ~ 1,
data = cz_2023_all_waves_resp %>%
filter(!is.na(soc_class_r)),
family = binomial(link = "logit"),
weights = weight_turnout) %>%
coeftest(., vcov = vcovHC(., type="HC1"))
ce1_round2_e <- glm(voted_2r ~ SWD_w1 + SWD_w4,
data = cz_2023_all_waves_resp %>%
filter(!is.na(soc_class_r)),
family = binomial(link = "logit"),
weights = weight_turnout) %>%
coeftest(., vcov = vcovHC(., type="HC1"))
ce2_round2_e <- glm(voted_2r ~ SWD_w1 + female +
age + postsecondary_edu + duty_to_vote +
pol_interest_num + pol_knowledge + party_close +
econ_precariousness2 + soc_class_r,
data = cz_2023_all_waves_resp %>%
filter(!is.na(soc_class_r)),
family = binomial(link = "logit"),
weights = weight_turnout) %>%
coeftest(., vcov = vcovHC(., type="HC1"))
ce3_round2_e <- glm(voted_2r ~ SWD_w4 + female + age +
postsecondary_edu +
duty_to_vote + pol_interest_num +
pol_knowledge + party_close +
econ_precariousness2 + soc_class_r,
data = cz_2023_all_waves_resp %>%
filter(!is.na(soc_class_r)),
family = binomial(link = "logit"),
weights = weight_turnout) %>%
coeftest(., vcov = vcovHC(., type="HC1"))
ce4_round2_e <- glm(voted_2r ~ SWD_w1 + SWD_w4 +
female + age + postsecondary_edu +
duty_to_vote + pol_interest_num + pol_knowledge +
party_close +
econ_precariousness2 + soc_class_r,
data = cz_2023_all_waves_resp %>%
filter(!is.na(soc_class_r)),
family = binomial(link = "logit"),
weights = weight_turnout) %>%
coeftest(., vcov = vcovHC(., type="HC1"))
pr2 <- tribble(~term, ~m1, ~m2, ~m3, ~m4, ~m5, ~m6, ~m7, ~m8,
"PseudoR2 (McFadden)",
r2(ce0_round1_e, ce1_round1_e),
r2(ce0_round1_e, ce2_round1_e),
r2(ce0_round1_e, ce3_round1_e),
r2(ce0_round1_e, ce4_round1_e),
r2(ce0_round2_e, ce1_round2_e),
r2(ce0_round2_e, ce2_round2_e),
r2(ce0_round2_e, ce3_round2_e),
r2(ce0_round2_e, ce4_round2_e))
model_n_vars <- broom::tidy(ce4_round1_e) %>%
filter(!grepl("election", term)) %>%
nrow()
attr(pr2, "position") <- (model_n_vars * 2) + 1
modelsummary(list("Round 1" = ce1_round1_e,
"Round 1" = ce2_round1_e,
"Round 1" = ce3_round1_e,
"Round 1" = ce4_round1_e,
"Round 2" = ce1_round2_e,
"Round 2" = ce2_round2_e,
"Round 2" = ce3_round2_e,
"Round 2" = ce4_round2_e),
stars = c("*"=.05, "**"=.01, "***"=0.001),
fmt = 2, coef_map = c(
"SWD_w1" = "Pre-election satisfaction (Wave 1)",
"SWD_w4" = "Post-election satisfaction (Wave 4)",
"female" = "Female",
"age" = "Age",
"postsecondary_edu" = "Post-secondary education",
"duty_to_vote" = "Duty to vote",
"pol_interest_num" = "Interest in politics",
"pol_knowledge" = "Political knowledge",
"party_close" = "Feels close to a party",
"econ_precariousness2" = "Economic  precariousness",
"soc_class_rUnemployed" = "Class: Unemployed",
"soc_class_rEcon. inactive (student, in household)" = "Class: Econ. inactive",
"soc_class_rPensioner" = "Class: Pensioner",
"soc_class_rManager/Businessperson"= "Class: Manager/Businessperson",
"soc_class_rFreelancer" = "Class: Freelancer",
"(Intercept)" = "Intercept"
),
add_rows = pr2,
# notes = c("Data weighted by turnout."),
# title = "Turnout and satisfaction with democracy, 2023 Czech presidential election",
gof_map = "nobs",
output = "output/app_tab3_models_class_precarity.tex"
)
modelsummary(list("Round 1" = ce1_round1_e,
"Round 1" = ce2_round1_e,
"Round 1" = ce3_round1_e,
"Round 1" = ce4_round1_e,
"Round 2" = ce1_round2_e,
"Round 2" = ce2_round2_e,
"Round 2" = ce3_round2_e,
"Round 2" = ce4_round2_e),
stars = c("*"=.05, "**"=.01, "***"=0.001),
fmt = 2,
coef_rename = c(
"SWD_w1" = "Pre-election satisfaction (Wave 1)",
"SWD_w4" = "Post-election satisfaction (Wave 4)",
"female" = "Female",
"age" = "Age",
"postsecondary_edu" = "Post-secondary education",
"duty_to_vote" = "Duty to vote",
"pol_interest_num" = "Interest in politics",
"pol_knowledge" = "Political knowledge",
"party_close" = "Feels close to a party",
"econ_precariousness2" = "Economic  precariousness",
"soc_class_rUnemployed" = "Class: Unemployed",
"soc_class_rEcon. inactive (student, in household)" = "Class: Econ. inactive",
"soc_class_rPensioner" = "Class: Pensioner",
"soc_class_rManager/Businessperson"= "Class: Manager/Businessperson",
"soc_class_rFreelancer" = "Class: Freelancer",
"(Intercept)" = "Intercept"
),
add_rows = pr2,
# notes = c("Data weighted by turnout."),
# title = "Turnout and satisfaction with democracy, 2023 Czech presidential election",
gof_map = "nobs")
pavel_voters$stable_voter
t.test(age ~ stable_winner, data = pavel_voters)
t.test(age ~ stable_voter, data = pavel_voters)
library(paqr)
pavel_voters <- cz_2023_all_waves_resp %>%
filter(PRES2023CAND2r_w4 == "Petr Pavel")
pavel_voters %>% count(stable_voter, prez_vote_type)
pavel_voters <- cz_2023_all_waves_resp %>%
filter(PRES2023CAND2r_w4 == "Petr Pavel")
cz_age <- cz_2023_models %>%
select(RADIOMETER_ID2, age)
winners <- pavel_voters %>%
select(-age) %>%
left_join(., cz_age, by = "RADIOMETER_ID2") %>%
mutate(full_winner = prez_vote_type == "full winner")
winners %>% group_by(full_winner) %>%
summarise(mean_age = mean(age))
t.test(age ~ full_winner, data = winners)
t.test(age ~ stable_voter, data = winners)
winners %>%
group_by(stable_voter) %>%
summarise(mean_age = mean(age))
winners %>%
group_by(stable_voter) %>%
summarise(mean_age = round(mean(age), 2))
winners %>%
group_by(stable_voter) %>%
summarise(mean_age = round(mean(age), 1))
swd1_round1_e <- lm_robust(swd_diff ~ voted_1r + voted_2r +
swd_pre + female +
age +
postsecondary_edu + pol_interest_num +
pol_knowledge + party_close + duty_to_vote +
econ_precariousness2 + soc_class_r,
data = cz_2023_all_waves_resp %>%
filter(!is.na(soc_class_r)),
weights = weight_turnout,
se_type = "stata")
swd1_round1_e <- lm_robust(swd_diff ~ voted_1r + voted_2r +
swd_pre + female +
age +
postsecondary_edu + pol_interest_num +
pol_knowledge + party_close + duty_to_vote +
econ_precariousness2 + soc_class_r,
data = cz_2023_all_waves_resp %>%
filter(!is.na(soc_class_r)),
weights = weight_turnout,
se_type = "stata")
swd3_round1_e <- lm_robust(swd_diff ~ voter_type + swd_pre +
female + age +
postsecondary_edu + pol_interest_num +
pol_knowledge + party_close + duty_to_vote +
econ_precariousness2 + soc_class_r,
data = cz_2023_all_waves_resp %>%
filter(!is.na(soc_class_r)),
weights = weight_turnout,
se_type = "stata")
swd4_round1_e <- lm_robust(swd_diff ~ prez_vote_type + swd_pre +
female + age +
postsecondary_edu + pol_interest_num +
pol_knowledge + party_close + duty_to_vote +
econ_precariousness2 + soc_class_r,
data = cz_2023_all_waves_resp %>%
filter(!is.na(soc_class_r)),
weights = weight_turnout,
se_type = "stata")
swd5_round1_e <- lm_robust(swd_diff ~ stable_voter + swd_pre +
female + age +
postsecondary_edu + pol_interest_num +
pol_knowledge + party_close + duty_to_vote +
econ_precariousness2 + soc_class_r,
data = pavel_voters %>%
filter(!is.na(soc_class_r)),
weights = weight_turnout,
se_type = "stata")
swd5_round1_ord_e <- lm_robust(swd_diff ~ pavel_decision + swd_pre +
female + age +
postsecondary_edu + pol_interest_num +
pol_knowledge + party_close + duty_to_vote +
econ_precariousness2 + soc_class_r,
data = pavel_voters %>%
filter(!is.na(soc_class_r)),
weights = weight_turnout,
se_type = "stata")
modelsummary(list(swd1_round1_e, swd3_round1_e,
swd4_round1_e
),
stars = c("*"=.05, "**"=.01, "***"=0.001),
coef_map = c(
"voted_1r" = "Voted (R1)",
"voted_2r" = "Voted (R2)",
"voter_typeVoted for winner" = "Winner",
"voter_typeVoted for loser" = "Loser",
"prez_vote_typefull winner" = "Full winner (A)",
"prez_vote_typesub-optimal winner" = "Sub-optimal winner (B)",
"prez_vote_typepartial loser" = "Partial loser (C)",
"prez_vote_typefull loser" = "Full loser (D)",
"stable_voter" = "Stable winner",
"swd_pre" = "Pre-election SWD",
"female" = "Female",
"age" = "Age",
"postsecondary_edu" = "Post-secondary education",
"pol_interest_num" = "Pol. interest",
"pol_knowledge" = "Pol. knowledge",
"party_close" = "Feels close to a party",
"duty_to_vote" = "Duty to vote",
"econ_precariousness2" = "Economic  precariousness",
"soc_class_rUnemployed" = "Class: Unemployed",
"soc_class_rEcon. inactive (student, in household)" = "Class: Econ. inactive",
"soc_class_rPensioner" = "Class: Pensioner",
"soc_class_rManager/Businessperson"= "Class: Manager/Businessperson",
"soc_class_rFreelancer" = "Class: Freelancer",
"(Intercept)"="Intercept"
),
fmt = 2,
gof_map = c("nobs", "r.squared", "adj.r.squared"),
# notes = c("Data weighted by turnout."),
output = "output/app_tab4_models_precariousness.tex")
pavel_voters <- cz_2023_all_waves_resp %>%
filter(PRES2023CAND2r_w4 == "Petr Pavel")
swd1_round1 <- lm_robust(swd_diff ~ voted_1r + voted_2r +
swd_pre,
data = cz_2023_all_waves_resp,
weights = weight_turnout,
se_type = "stata")
swd1_round1b <- lm_robust(swd_diff ~ voted_1r + voted_2r +
swd_pre,
data = cz_2023_all_waves_resp,
weights = weight_turnout,
se_type = "stata")
swd3_round1 <- lm_robust(swd_diff ~ voter_type + swd_pre,
data = cz_2023_all_waves_resp,
weights = weight_turnout,
se_type = "stata")
swd4_round1 <- lm_robust(swd_diff ~ prez_vote_type + swd_pre,
data = cz_2023_all_waves_resp,
weights = weight_turnout,
se_type = "stata")
swd5_round1 <- lm_robust(swd_diff ~ stable_voter + swd_pre,
data = pavel_voters,
weights = weight_turnout,
se_type = "stata")
swd5_round1_ord <- lm_robust(swd_diff ~ pavel_decision + swd_pre,
data = pavel_voters,
weights = weight_turnout,
se_type = "stata")
modelsummary(list(swd1_round1, swd3_round1,
swd4_round1
),
stars = c("*"=.05, "**"=.01, "***"=0.001),
coef_map = c(
"voted_1r" = "Voted (R1)",
"voted_2r" = "Voted (R2)",
"voter_typeVoted for winner" = "Winner",
"voter_typeVoted for loser" = "Loser",
"prez_vote_typefull winner" = "Full winner (A)",
"prez_vote_typesub-optimal winner" = "Sub-optimal winner (B)",
"prez_vote_typepartial loser" = "Partial loser (C)",
"prez_vote_typefull loser" = "Full loser (D)",
"stable_voter" = "Stable winner",
"swd_pre" = "Pre-election SWD",
# "female" = "Female",
# "age" = "Age",
# "postsecondary_edu" = "Post-secondary education",
# "pol_interest_num" = "Pol. interest",
# "pol_knowledge" = "Pol. knowledge",
# "party_close" = "Feels close to a party",
# "duty_to_vote" = "Duty to vote",
"(Intercept)"="Intercept"
),
fmt = 2,
gof_map = c("nobs", "r.squared", "adj.r.squared"),
# notes = c("Data weighted by turnout."),
output = "output/app_tab26_tab4_wo_controls.tex")
